{"abstract":[{"type":"text","text":"Integrates the "},{"type":"strong","inlineContent":[{"type":"text","text":"mimik"}]},{"type":"text","text":" AI service using your credentials and use-case configuration."}],"identifier":{"url":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/integrateAIService(accessToken:apiKey:useCase:requestHandler:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"integrateAIService","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessToken","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"apiKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"useCase","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV","text":"UseCase","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV19ConfigurationSourceO","text":"ConfigurationSource","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"requestHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:9Alamofire17DataStreamRequestC","text":"DataStreamRequest","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ClientLibrary","preciseIdentifier":"s:8EdgeCore13ClientLibraryC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"AI","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ServiceIntegration","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC18ServiceIntegrationV"}],"externalID":"s:8EdgeCore13ClientLibraryC18integrateAIService11accessToken6apiKey7useCase14requestHandlerAC2AIC18ServiceIntegrationVSS_SSAC03UseL0V19ConfigurationSourceOy9Alamofire17DataStreamRequestCctYaKFZ","extendedModule":"EdgeCore","title":"integrateAIService(accessToken:apiKey:useCase:requestHandler:)","role":"symbol","symbolKind":"method","roleHeading":"Type Method","modules":[{"name":"EdgeCore"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"integrateAIService","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessToken","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"apiKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"useCase","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UseCase","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/UseCase","kind":"typeIdentifier","preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV"},{"text":".","kind":"text"},{"text":"ConfigurationSource","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/UseCase\/ConfigurationSource","kind":"typeIdentifier","preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV19ConfigurationSourceO"},{"text":", ","kind":"text"},{"text":"requestHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"DataStreamRequest","kind":"typeIdentifier","preciseIdentifier":"s:9Alamofire17DataStreamRequestC"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":" = { _ in }) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ClientLibrary","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary","kind":"typeIdentifier","preciseIdentifier":"s:8EdgeCore13ClientLibraryC"},{"text":".","kind":"text"},{"text":"AI","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/AI","kind":"typeIdentifier","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC"},{"text":".","kind":"text"},{"text":"ServiceIntegration","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/AI\/ServiceIntegration","kind":"typeIdentifier","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC18ServiceIntegrationV"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A valid bearer token for authenticating with the AI service.","type":"text"}]}],"name":"accessToken"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The API key issued to your application.","type":"text"}]}],"name":"apiKey"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Where to obtain the ","type":"text"},{"code":"UseCase","type":"codeVoice"},{"text":" configuration:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":".inline(let useCase)","type":"codeVoice"},{"type":"text","text":": Use an existing "},{"code":"UseCase","type":"codeVoice"},{"type":"text","text":" object."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":".remote(let url)","type":"codeVoice"},{"type":"text","text":": Fetch the configuration from the given URL."}],"type":"paragraph"}]}]}],"name":"source"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure called for each outgoing ","type":"text"},{"code":"DataStreamRequest","type":"codeVoice"},{"text":" ","type":"text"},{"text":"(useful for logging, header injection, or validation). Defaults to a no-op.","type":"text"}]}],"name":"requestHandler"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ServiceIntegration"},{"type":"text","text":" containing:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"service","type":"codeVoice"},{"text":": A configured ","type":"text"},{"code":"ServiceConfiguration","type":"codeVoice"},{"text":" for inference calls.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"useCase","type":"codeVoice"},{"text":": The resolved ","type":"text"},{"code":"UseCase","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method authenticates with the service, loads the specified "},{"type":"codeVoice","code":"UseCase"},{"type":"text","text":" (inline or from a URL),"},{"type":"text","text":" "},{"type":"text","text":"and prepares a configured "},{"type":"codeVoice","code":"ServiceIntegration"},{"type":"text","text":" for making AI inference calls."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Concurrency: This method is ","type":"text"},{"code":"async","type":"codeVoice"},{"text":" and must be called from an asynchronous context.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let config = UseCaseConfigurationSource.remote(URL(string: \"https:\/\/example.com\/config.json\")!)","do {","    let integration = try await integrateAIService(","        accessToken: token,","        apiKey: key,","        useCase: config","    )","    \/\/ integration.service → inference client","    \/\/ integration.useCase → resolved configuration","} catch {","    print(\"Integration failed:\", error)","}"],"type":"codeListing"}]}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"NSError","type":"codeVoice"},{"text":" if integration fails (e.g. invalid credentials or network issues).","type":"text"}]}],"style":"note","name":"Throws"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore","doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/edgecore\/clientlibrary\/integrateaiservice(accesstoken:apikey:usecase:requesthandler:)"]}],"references":{"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/AI":{"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/AI","title":"ClientLibrary.AI","kind":"symbol","url":"\/documentation\/edgecore\/clientlibrary\/ai","navigatorTitle":[{"text":"AI","kind":"identifier"}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AI","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for types related to AI interaction, including clients, protocols, model representations, and configuration utilities."}],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/integrateAIService(accessToken:apiKey:useCase:requestHandler:)":{"abstract":[{"type":"text","text":"Integrates the "},{"type":"strong","inlineContent":[{"type":"text","text":"mimik"}]},{"type":"text","text":" AI service using your credentials and use-case configuration."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/integrateAIService(accessToken:apiKey:useCase:requestHandler:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"integrateAIService"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"apiKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"useCase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UseCase","preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ConfigurationSource","preciseIdentifier":"s:8EdgeCore13ClientLibraryC7UseCaseV19ConfigurationSourceO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"requestHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"DataStreamRequest","preciseIdentifier":"s:9Alamofire17DataStreamRequestC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ClientLibrary","preciseIdentifier":"s:8EdgeCore13ClientLibraryC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AI","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ServiceIntegration","preciseIdentifier":"s:8EdgeCore13ClientLibraryC2AIC18ServiceIntegrationV"}],"role":"symbol","title":"integrateAIService(accessToken:apiKey:useCase:requestHandler:)","url":"\/documentation\/edgecore\/clientlibrary\/integrateaiservice(accesstoken:apikey:usecase:requesthandler:)"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/UseCase":{"abstract":[{"type":"text","text":"A complete solution to a problem, built on mimik’s Hybrid Edge Cloud Computing technologies."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/UseCase","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCase","kind":"identifier"}],"role":"symbol","title":"ClientLibrary.UseCase","url":"\/documentation\/edgecore\/clientlibrary\/usecase","navigatorTitle":[{"text":"UseCase","kind":"identifier"}]},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/UseCase/ConfigurationSource":{"abstract":[{"text":"Specifies how to obtain the AI ","type":"text"},{"code":"UseCase","type":"codeVoice"},{"text":" configuration.","type":"text"}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/UseCase\/ConfigurationSource","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConfigurationSource"}],"role":"symbol","title":"ClientLibrary.UseCase.ConfigurationSource","url":"\/documentation\/edgecore\/clientlibrary\/usecase\/configurationsource","navigatorTitle":[{"kind":"identifier","text":"ConfigurationSource"}]},"doc://com.mimik.EdgeCore/documentation/EdgeCore":{"role":"collection","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore","title":"EdgeCore","url":"\/documentation\/edgecore","kind":"symbol","abstract":[],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary":{"abstract":[{"type":"text","text":"The primary interface to the mimik Client Library."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary","title":"ClientLibrary","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientLibrary","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/edgecore\/clientlibrary","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClientLibrary"}]},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/AI/ServiceIntegration":{"abstract":[{"type":"text","text":"The result of initializing the AI service with a specified use case."},{"type":"text","text":" "},{"type":"text","text":"Contains both the fully configured service client and the resolved "},{"type":"codeVoice","code":"UseCase"},{"type":"text","text":" object."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/AI\/ServiceIntegration","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceIntegration"}],"role":"symbol","title":"ClientLibrary.AI.ServiceIntegration","url":"\/documentation\/edgecore\/clientlibrary\/ai\/serviceintegration","navigatorTitle":[{"kind":"identifier","text":"ServiceIntegration"}]}}}