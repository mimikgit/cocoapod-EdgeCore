{"hierarchy":{"paths":[["doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore","doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary","doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice"]]},"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/init(from:)"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/env","doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/image","doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/name"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/Encodable-Implementations"]}],"kind":"symbol","sections":[],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.mimik.EdgeCore\/Se","doc:\/\/com.mimik.EdgeCore\/SE","doc:\/\/com.mimik.EdgeCore\/s8SendableP","doc:\/\/com.mimik.EdgeCore\/s16SendableMetatypeP"]}],"identifier":{"url":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NewContainer"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer"]}],"metadata":{"title":"ClientLibrary.Microservice.NewContainer","roleHeading":"Structure","navigatorTitle":[{"text":"NewContainer","kind":"identifier"}],"role":"symbol","externalID":"s:8EdgeCore13ClientLibraryC12MicroserviceV12NewContainerV","modules":[{"name":"EdgeCore"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NewContainer","kind":"identifier"}],"symbolKind":"struct","extendedModule":"EdgeCore"},"references":{"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary":{"abstract":[{"type":"text","text":"The primary interface to the mimik Client Library."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary","title":"ClientLibrary","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientLibrary","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/edgecore\/clientlibrary","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClientLibrary"}]},"doc://com.mimik.EdgeCore/s16SendableMetatypeP":{"identifier":"doc:\/\/com.mimik.EdgeCore\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer/name":{"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/name","title":"name","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer\/name","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"name for the container.  Please note that Docker allows one to give more than one name to a container."}],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer/Encodable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/Encodable-Implementations","title":"Encodable Implementations","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer\/encodable-implementations","type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore":{"role":"collection","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore","title":"EdgeCore","url":"\/documentation\/edgecore","kind":"symbol","abstract":[],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer/env":{"kind":"symbol","abstract":[{"text":"A list of environment variables to set inside the container in the form [&quot;VAR=value&quot;, …]. A variable without = is removed from the environment, rather than to have an empty value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/env","title":"env","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer\/env","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"env"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]?"}],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer":{"navigatorTitle":[{"text":"NewContainer","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer","title":"ClientLibrary.Microservice.NewContainer","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NewContainer","kind":"identifier"}],"type":"topic"},"doc://com.mimik.EdgeCore/Se":{"identifier":"doc:\/\/com.mimik.EdgeCore\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice":{"abstract":[{"type":"text","text":"Edge "},{"type":"codeVoice","code":"Microservice"},{"type":"text","text":" is a light-weight service running on the user’s device, providing RESTful API to the application environment."}],"identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Microservice","kind":"identifier"}],"role":"symbol","title":"ClientLibrary.Microservice","url":"\/documentation\/edgecore\/clientlibrary\/microservice","navigatorTitle":[{"text":"Microservice","kind":"identifier"}]},"doc://com.mimik.EdgeCore/SE":{"identifier":"doc:\/\/com.mimik.EdgeCore\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://com.mimik.EdgeCore/s8SendableP":{"identifier":"doc:\/\/com.mimik.EdgeCore\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer/image":{"kind":"symbol","abstract":[{"type":"text","text":"The name of the image to use when creating the container"}],"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/image","title":"image","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer\/image","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"image"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.mimik.EdgeCore/documentation/EdgeCore/ClientLibrary/Microservice/NewContainer/init(from:)":{"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeCore\/documentation\/EdgeCore\/ClientLibrary\/Microservice\/NewContainer\/init(from:)","title":"init(from:)","url":"\/documentation\/edgecore\/clientlibrary\/microservice\/newcontainer\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic"}}}